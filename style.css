:root {
    --bg: #000;
    --text: #fff;
    --accent: #f70;
    --size: 16px;
    --fill-available: 100%;
    --fsb-display: inline-block;
    --viewer-footer-not-on-hover-opacity: 0;
    --viewer-footer-transition: opacity 0.3s ease-in-out;
    --viewer-footer-translation-of-backdrop: 0 100%;
    --mediaMargin: 2.5px; /* Because they don't overlap it's halved... :/ */
}
@supports (width: -moz-available) {
    :root {
        --fill-available: -moz-available;
    }
}
@supports (width: -webkit-fill-available) {
    :root {
        --fill-available: -webkit-fill-available;
    }
}
/* ------- */
/* General */
/* ------- */
html {
    scrollbar-width: thin;
    scrollbar-color: var(--accent) transparent;
}
body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    font-size: var(--size);
    background: var(--bg);
    color: var(--text);
    overflow-y: scroll !important;
    min-height: 100vh;
    min-width: 400px;
    padding-right: 0 !important; /* ViewerJS, what is wrong with you */
}
html:has(body.viewer-open) {
    scrollbar-color: transparent transparent;
}
@media screen and (max-width: 500px) {
    body {
        zoom: 0.75;
    }
}
@media screen and (max-width: 350px) {
    body {
        zoom: 0.5;
    }
}
@media screen and (max-width: 100px) {
    body {
        zoom: 0.25;
    }
}
::selection {
    background-color: var(--accent);
}
nav, section {
    padding: var(--size);
}
nav {
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: auto;
    grid-template-rows: repeat(4, 1fr);
    grid-auto-rows: auto;
    gap: var(--size);
}
@media screen and (max-width: 1200px) {
    nav {
        grid-template-rows: repeat(5, 1fr);
    }
}
@media screen and (max-width: 800px) {
    nav {
        grid-auto-flow: row;
    }
}
nav > div {
    display: flex;
    align-items: center;
}
label, input, .input-value {
    vertical-align: middle;
}
a, a:active {
    color: var(--text);
}
a:not(:has(video)):focus-within {
    opacity: 0.5;
}
label {
    text-wrap: nowrap;
}
@media screen and (max-width: 1400px) {
    label {
        text-wrap: balance;
    }
}
input, button {
    margin: 0 0.5em;
    font-size: var(--size);
    color: var(--text);
    background-color: var(--bg);
}
nav :is(input, button) {
    width: var(--fill-available);
}
input:not([type="range"]), button {
    &:not([type="file"]) {
        border: 0.2em solid var(--text);
    }
    border-radius: 0.5em;
}
input:focus:is(:not([type="range"])) {
    outline: 0.2em solid var(--accent);
}
input[type='range'] {
    appearance: none !important;
    background:var(--text);
    height: 7px;
    border-radius: 100vh;
}
input[type='range']::-moz-range-progress, input[type='range']::-webkit-slider-runnable-track {
    appearance: none !important;
    background: var(--accent);
    height: 7px;
    width: 7px;
    border-radius: 100vh;
}
input[type='range']::-moz-range-thumb, input[type='range']::-webkit-slider-thumb {
    appearance: none !important;
    background: var(--text);
    outline: 2px solid var(--accent);
    height: 14px;
    width: 14px;
    border-radius: 100vh;
}
footer {
    opacity: 0.3;
    margin-top: 1em;
    font-size: smaller;
}
/* Fullscreen Opitimizations */
html:fullscreen {
    :is(section, footer) {
        display: none;
    }
    nav {
        height: 0;
        padding: 0.5px;
        opacity: 0;
    }
    nav:hover {
        height: auto;
        padding: var(--size);
        opacity: 1;
    }
    #gallery {
        background: inherit;
    }
}

/* ------- */
/* Gallery */
/* ------- */
#gallery {
    min-height: 150px;
}
.image {
    cursor: pointer;
}
.video video {
    width: 100%;
    height: 100%;
}
.video {
    position: relative;
}
.video .closer {
    display: none;
}
body.editorMode .video:hover .closer {
    content: 'X';
    z-index: 1;
    position: absolute;
    top: 0;
    right: 0;
    width: 2em;
    height: 2em;
    opacity: 0.2;
    background-color: var(--bg);
    color: var(--text);
    text-align: center;
    border-bottom-left-radius: 100vh;
    display: flex;
    justify-content: flex-end;
    align-items: flex-start;
    padding: 0.3em;
    cursor: pointer;
    pointer-events: all !important;
}
.jg-entry-visible > img {
    transition: opacity 0s linear !important;
}

/* ----------------- */
/* Justified Gallery */
/* ----------------- */
#gallery {
    display: flex;
    flex-wrap: wrap;
    &::after {
        content: '';
        flex-grow: 999999999;
    }
    a {
        margin: var(--mediaMargin);
        position: relative;
    }
    i {
        display: block;
    }
    img, video {
        position: absolute;
        top: 0;
        width: 100%;
        vertical-align: bottom;
    }
}

/* ------- */
/* Dragula */
/* ------- */
.gu-mirror img {
    max-width: 100%;
    max-height: 100%;
    min-width: 100%;
    min-height: 100%;
}

/* ---------- */
/* Fix Viewer */
/* ---------- */
.viewer-container {
    backdrop-filter: blur(var(--size));
}
.viewer-special-transition  {
    transition: all 0.2s;
}
.viewer-toolbar > ul > li {
    padding: 12px;
}
.viewer-toolbar > ul > li::before {
    scale: 1.5;
    /* background-image: url(./viewerjs/ViewerJS.svg); */
}
.viewer-toolbar > ul > li {
    backdrop-filter: blur(var(--size));
    background-color: rgba(0,0,0,0.2);
}
/* .viewer-toolbar > ul > li:focus {
    box-shadow: inset white 0 0 5px;
    background-color: rgba(0,0,0,0.2);
} */
.viewer-toolbar > ul > li:hover {
    background-color: rgba(0,0,0,0.4);
}
.viewer-title {
    display: none; /* Even though I might have cooked something good looking here, in the end Filenames don't even display properly so whatever */
    filter: invert(0.3);
    mix-blend-mode: difference;
}
/* some cool effect idk */
.viewer-footer {
    opacity: var(--viewer-footer-not-on-hover-opacity);
}
.viewer-footer:hover {
    opacity: 1;
}
.viewer-footer > * {
    opacity: var(--viewer-footer-not-on-hover-opacity);
    transition: var(--viewer-footer-transition);
}
.viewer-footer:hover > * {
    opacity: 1;
}
.viewer-footer::before {
    content: '';
    inset: 0;
    position: absolute;
    pointer-events: none;
    backdrop-filter: blur(calc(var(--size) * 2));
    mask-image: linear-gradient(to bottom, transparent, #fff 50%);
    translate: var(--viewer-footer-translation-of-backdrop);
    transition: translate 0.3s ease-in-out;
}
.viewer-footer:hover::before {
    translate: 0 0;
}
.viewer-navbar {
    background-color: transparent;
}
/* -------- */
/* Settings */
/* -------- */
#rowHeight {
    width: min(700px, 100%);
}
#toggleFullscreenButton {
    outline: 0;
    border: 0;
    cursor: pointer;
    opacity: 0.2;
    height: calc(var(--size)*4);
    display: var(--fsb-display);
}
body:fullscreen #toggleFullscreenButton {
    opacity: 0;
}
body:fullscreen #toggleFullscreenButton:hover {
    opacity: 0.2;
}

/* ----------- */
/* Editor Mode */
/* ----------- */
body.editorMode #gallery a * {
    pointer-events: none;
}
body.editorMode .gu-mirror {
    pointer-events: none;
}