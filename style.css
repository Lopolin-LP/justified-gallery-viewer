:root {
    --bg-user: #000;
    --text-user: #fff;
    --accent-user: #f70;
    --bg: rgb(from var(--bg-user) r g b / alpha);
    --text: rgb(from var(--text-user) r g b / alpha);
    --accent: rgb(from var(--accent-user) r g b / alpha);

    --size: 16px;
    --size-075: calc(var(--size) * 0.75);
    --size-05: calc(var(--size) * 0.5);
    --size-025: calc(var(--size) * 0.25);
    --size-2px: calc(var(--size) * 0.125);
    --size-1px: calc(var(--size) * 0.0625);
    --size-0-5px: calc(var(--size) * 0.03125);

    --fill-available: 100%;
    --fsb-display: inline-block;
    --viewer-footer-not-on-hover-opacity: 0;
    --viewer-footer-transition: opacity 0.3s ease-in-out;
    --viewer-footer-translation-of-backdrop: 0 100%;
    --mediaMargin: 2.5px; /* Because they don't overlap it's halved... :/ */

    --minWidthAfterGallery-user: 33%;
    --minWidthAfterGallery: min(100vw, var(--minWidthAfterGallery-user));
}
@supports (width: -moz-available) {
    :root {
        --fill-available: -moz-available;
    }
}
@supports (width: -webkit-fill-available) {
    :root {
        --fill-available: -webkit-fill-available;
    }
}
/* ------- */
/* General */
/* ------- */
html {
    scrollbar-width: thin;
    scrollbar-color: var(--accent) transparent;
}
body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    font-size: var(--size);
    background: var(--bg);
    color: var(--text);
    overflow-y: scroll !important;
    min-height: 100vh;
    /* min-width: 400px; */
    padding-right: 0 !important; /* ViewerJS, what is wrong with you */
}
html:has(body.viewer-open) {
    scrollbar-color: transparent transparent;
}
@media screen and (max-width: 500px) {
    body {
        /* zoom: 0.75; */
        --size: 12px;
    }
}
@media screen and (max-width: 350px) {
    body {
        /* zoom: 0.5; */
        --size: 8px;
    }
}
@media screen and (max-width: 225px) {
    body {
        /* zoom: 0.33; */
        --size: 6px;
    }
}
@media screen and (max-width: 150px) {
    body {
        /* zoom: 0.25; */
        --size: 4px;
    }
}
@media screen and (max-width: 100px) {
    body {
        /* zoom: 0.25; */
        --size: 3px;
    }
}
::selection {
    color: oklch(from var(--accent) calc(1 - l) calc((1 - c)*0.5) calc(h + 160) / alpha); /* It's specifically 160 and not 180 */
    background-color: var(--accent);
}
nav, section {
    padding: var(--size);
}
nav {
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: auto;
    grid-template-rows: repeat(5, 1fr);
    grid-auto-rows: auto;
    gap: var(--size);
}
@media screen and (max-width: 1200px) {
    nav {
        grid-template-rows: repeat(7, 1fr);
    }
}
@media screen and (max-width: 1000px) {
    nav {
        grid-auto-flow: row;
    }
}
nav > div {
    display: flex;
    align-items: center;
}
label, input, .input-value {
    vertical-align: middle;
}
a, a:active {
    color: var(--text);
}
a:not(:has(video)):focus-within {
    opacity: 0.5;
}
label {
    text-wrap: nowrap;
}
@media screen and (max-width: 1400px) {
    label {
        text-wrap: balance;
    }
}
input, button {
    margin: 0 0.5em;
    font-size: var(--size);
    color: var(--text);
    background-color: var(--bg);
}
nav :is(input, button) {
    width: var(--fill-available);
    height: 100%;
}
#misc input[type="checkbox"] {
    width: calc(var(--size) * 1.5);
    height: calc(var(--size) * 1.5);
}
input:not([type="range"]), button {
    &:not([type="file"]) {
        border: 0.2em solid var(--text);
    }
    border-radius: 0.5em;
}
input:focus:is(:not([type="range"])) {
    outline: 0.2em solid var(--accent);
}
input[type='range'] {
    appearance: none !important;
    background:var(--text);
    height: calc(var(--size) * 0.45);
    border-radius: 100vh;
}
input[type='range']::-moz-range-progress, input[type='range']::-webkit-slider-runnable-track {
    appearance: none !important;
    background: var(--accent);
    height: calc(var(--size) * 0.45);
    width: calc(var(--size) * 0.45);
    border-radius: 100vh;
}
input[type='range']::-moz-range-thumb, input[type='range']::-webkit-slider-thumb {
    appearance: none !important;
    background: var(--text);
    outline: var(--size-2px) solid var(--accent);
    height: calc(var(--size) * 0.9);
    width: calc(var(--size) * 0.9);
    border-radius: 100vh;
}
:is(div, span, p):has(> input[type="checkbox"]:checked) {
    background: rgba(from var(--accent) r g b / 0.5);
}
footer {
    opacity: 0.3;
    margin-top: 1em;
    font-size: smaller;
}
/* Fullscreen Opitimizations */
html.fullscreen {
    :is(section, footer) {
        display: none;
    }
    nav {
        position: fixed;
        content-visibility: hidden;
        inset: 0;
        bottom: unset;
        height: 0;
        padding: var(--size-0-5px);
        opacity: 0;
        z-index: 5;
        background-color: rgba(from var(--bg) r g b / 0.8);
        backdrop-filter: blur(var(--size));
    }
    nav:hover {
        content: unset;
        content-visibility: auto;
        height: auto;
        padding: var(--size);
        opacity: 1;
    }
    #gallery {
        background: inherit;
    }
}

/* ----- */
/* Table */
/* ----- */
#tutorial {
    display: flex;
    flex-direction: row;
    gap: 0.5em;
}
@media screen and (max-width: 800px) {
    #tutorial {
        flex-direction: column;
    }
}
table {
    border: var(--size-2px) solid var(--text);
    border-spacing: 0;
    height: fit-content;
}
tr {
    margin: 0;
}
thead tr:last-of-type td, thead:last-of-type {
    border-bottom: var(--size-2px) solid var(--text);
}
td {
    padding: calc(var(--size) * 0.5);
    border: var(--size-1px) solid color-mix(in oklab, rgb(from var(--bg) r g b) 50%, rgb(from var(--text) r g b) 50%);
}
tr:nth-child(2n) {
    background-color: color-mix(in oklab, rgb(from var(--text) r g b) 40%, rgb(from var(--bg) r g b) 80%);
}
tr:nth-child(2n+1) {
    background-color: color-mix(in oklab, rgb(from var(--text) r g b) 20%, rgb(from var(--bg) r g b) 80%);
}
thead tr:nth-child(2n) {
    background-color: color-mix(in oklab, rgb(from var(--accent) r g b) 40%, rgb(from var(--bg) r g b) 80%);
}
thead tr:nth-child(2n+1) {
    background-color: color-mix(in oklab, rgb(from var(--accent) r g b) 20%, rgb(from var(--bg) r g b) 80%);
}
tr:has(td:first-of-type:last-of-type) {
    background-color: color-mix(in oklab, rgb(from var(--accent) r g b) 50%, rgb(from var(--bg) r g b) 50%);
}

/* ------- */
/* Gallery */
/* ------- */
#gallery {
    min-height: 50px;
}
.image {
    cursor: pointer;
}
.video video {
    width: 100%;
    height: 100%;
}
.video {
    position: relative;
}
.video .closer {
    display: none;
}
body.editorMode .video:hover .closer {
    content: 'X';
    z-index: 1;
    position: absolute;
    top: 0;
    right: 0;
    width: 2em;
    height: 2em;
    opacity: 0.2;
    background-color: var(--bg);
    color: var(--text);
    text-align: center;
    border-bottom-left-radius: 100vh;
    display: flex;
    justify-content: flex-end;
    align-items: flex-start;
    padding: 0.3em;
    cursor: pointer;
    pointer-events: all !important;
}
.jg-entry-visible > img {
    transition: opacity 0s linear !important;
}

/* ----------------- */
/* Justified Gallery */
/* ----------------- */
#gallery {
    display: flex;
    flex-wrap: wrap;
    &::after {
        content: '';
        flex-grow: 999999999;
        min-width: var(--minWidthAfterGallery);
    }
    a {
        margin: var(--mediaMargin);
        position: relative;
    }
    i {
        display: block;
    }
    img, video {
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        vertical-align: bottom;
    }
}

/* ------- */
/* Dragula */
/* ------- */
.gu-mirror img {
    max-width: 100%;
    max-height: 100%;
    min-width: 100%;
    min-height: 100%;
}

/* ---------- */
/* Fix Viewer */
/* ---------- */
.viewer-container {
    backdrop-filter: blur(var(--size));
}
.viewer-special-transition  {
    transition: all 0.2s;
}
.viewer-toolbar > ul > li {
    padding: var(--size-075);
}
.viewer-toolbar > ul > li::before {
    scale: 1.5;
    /* background-image: url(./viewerjs/ViewerJS.svg); */
}
.viewer-toolbar > ul > li {
    backdrop-filter: blur(var(--size));
    background-color: rgba(0,0,0,0.2);
}
/* .viewer-toolbar > ul > li:focus {
    box-shadow: inset white 0 0 5px;
    background-color: rgba(0,0,0,0.2);
} */
.viewer-toolbar > ul > li:hover {
    background-color: rgba(0,0,0,0.4);
}
.viewer-title {
    display: none; /* Even though I might have cooked something good looking here, in the end Filenames don't even display properly so whatever */
    filter: invert(0.3);
    mix-blend-mode: difference;
}
/* some cool effect idk */
.viewer-footer {
    opacity: var(--viewer-footer-not-on-hover-opacity);
}
.viewer-footer:hover {
    opacity: 1;
}
.viewer-footer > * {
    opacity: var(--viewer-footer-not-on-hover-opacity);
    transition: var(--viewer-footer-transition);
}
.viewer-footer:hover > * {
    opacity: 1;
}
.viewer-footer::before {
    content: '';
    inset: 0;
    position: absolute;
    pointer-events: none;
    backdrop-filter: blur(calc(var(--size) * 2));
    mask-image: linear-gradient(to bottom, transparent, #fff 50%);
    translate: var(--viewer-footer-translation-of-backdrop);
    transition: translate 0.3s ease-in-out;
}
.viewer-footer:hover::before {
    translate: 0 0;
}
.viewer-navbar {
    background-color: transparent;
}
/* -------- */
/* Settings */
/* -------- */
#rowHeight {
    width: min(700px, 100%);
}
#toggleFullscreenButton {
    outline: 0;
    border: 0;
    cursor: pointer;
    opacity: 0.2;
    height: calc(var(--size)*4);
    display: var(--fsb-display);
}
html.fullscreen #toggleFullscreenButton {
    opacity: 0;
}
html.fullscreen #toggleFullscreenButton:hover {
    opacity: 0.2;
}

/* ----------- */
/* Editor Mode */
/* ----------- */
body.editorMode #gallery a {
    touch-action: none;
    * {
        pointer-events: none;
    }
}
body.editorMode .gu-mirror {
    pointer-events: none;
}

/* ------------ */
/* Confirmation */
/* ------------ */
.confirmation {
    position: fixed;
    display: flex;
    align-items: center;
    justify-content: center;
    inset: 0;
    font-size: 2em;
    background: rgba(from var(--bg) r g b / 0.5);
    backdrop-filter: blur(calc(var(--size) * 2));
    user-select: none;
    div:not(.confirmation-bg-cancel) {
        background: inherit;
        display: grid;
        grid-template-areas: 'header header'
        'cancel confirm';
        border-radius: var(--size);
        padding: calc(var(--size) * 2);
        z-index: 15;
    }
    .confirmation-bg-cancel {
        position: fixed;
        z-index: 14;
        inset: 0;
    }
    button {
        margin: var(--size);
        width: var(--fill-available);
        font-size: inherit;
    }
    h1 {
        grid-area: header;
        text-align: center;
    }
    .confirmation-cancel {
        grid-area: cancel;
        --text: #f00;
        --bg: #000;
    }
    .confirmation-confirm {
        grid-area: confirm;
        --text: #0f0;
        --bg: #000;
    }
}

/* -------- */
/* ManualDL */
/* -------- */
.manualdl {
    position: fixed;
    display: flex;
    align-items: center;
    justify-content: center;
    inset: 0;
    font-size: 1.5em;
    backdrop-filter: blur(calc(var(--size) * 2));
    > div:not(.manualdl-alt-exit) {
        display: flex;
        flex-direction: column;
        background-color: var(--bg);
        gap: var(--size);
        border-radius: calc(var(--size) * 2);
        padding: calc(var(--size) * 2);
        z-index: 10;
        position: relative;
        max-height: 80vh;
        height: 100%;
    }
    .manualdl-alt-exit {
        position: fixed;
        z-index: 9;
        inset: 0;
    }
    h1 {
        text-align: center;
    }
    .manualdl-exit {
        position: absolute;
        top: calc(var(--size) * 2);
        right: calc(var(--size) * 2);
        width: 2em;
        height: 2em;
        border: 0 !important;
        margin: 0 !important;
        background-color: var(--text);
        color: var(--bg);
        cursor: pointer;
    }
    .manualdl-todo {
        border: var(--size-025) solid color-mix(in srgb, var(--bg) 80%, var(--text) 20%);
        border-radius: calc(var(--size) * 2);
        width: 100%;
        height: 100%;
        background-color: color-mix(in srgb, var(--bg) 80%, var(--text) 20%);
    }
    .manualdl-instruction > div {
        display: flex;
        flex-direction: row;
        gap: 2em;
        justify-content: space-between;
        img {
            width: 40%;
            height: auto;
        }
    }
    @media screen and (max-width: 600px) {
        .manualdl-instruction > div {
            flex-direction: column;
            gap: 0;
            align-items: center;
        }
    }
}

/* ------------------ */
/* Emergency Settings */
/* ------------------ */
#emergencySettings{
    &:not(.visible) {
        display: none;
    }
    > div {
        display: flex;
        flex-direction: row;
        align-items: center;
    }
    input {
        width: var(--fill-available);
    }
}